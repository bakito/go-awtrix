// Code generated by go-builder-generator (https://github.com/kilianpaquier/go-builder-generator). DO NOT EDIT.

package types

// SettingsBuilder represents Settings's builder.
type SettingsBuilder struct {
	build Settings
}

// NewSettingsBuilder creates a new SettingsBuilder.
func NewSettingsBuilder() *SettingsBuilder {
	return &SettingsBuilder{}
}

// Copy reassigns the builder struct (behind pointer) to a new pointer and returns it.
func (b *SettingsBuilder) Copy() *SettingsBuilder {
	return &SettingsBuilder{b.build}
}

// Build returns built Settings.
func (b *SettingsBuilder) Build() *Settings {
	result := b.build
	return &result
}

// AppDisplayTime sets Settings's AppDisplayTime.
func (b *SettingsBuilder) AppDisplayTime(appDisplayTime int) *SettingsBuilder {
	b.build.AppDisplayTime = &appDisplayTime
	return b
}

// AppStyle sets Settings's AppStyle.
func (b *SettingsBuilder) AppStyle(appStyle int) *SettingsBuilder {
	b.build.AppStyle = &appStyle
	return b
}

// AutomaticBrightness sets Settings's AutomaticBrightness.
func (b *SettingsBuilder) AutomaticBrightness(automaticBrightness bool) *SettingsBuilder {
	b.build.AutomaticBrightness = &automaticBrightness
	return b
}

// AutomaticSwitchApp sets Settings's AutomaticSwitchApp.
func (b *SettingsBuilder) AutomaticSwitchApp(automaticSwitchApp bool) *SettingsBuilder {
	b.build.AutomaticSwitchApp = &automaticSwitchApp
	return b
}

// BatteryApp sets Settings's BatteryApp.
func (b *SettingsBuilder) BatteryApp(batteryApp bool) *SettingsBuilder {
	b.build.BatteryApp = &batteryApp
	return b
}

// BatteryColor sets Settings's BatteryColor.
func (b *SettingsBuilder) BatteryColor(batteryColor string) *SettingsBuilder {
	b.build.BatteryColor = &batteryColor
	return b
}

// BLOCKN sets Settings's BLOCKN.
func (b *SettingsBuilder) BLOCKN(blockn bool) *SettingsBuilder {
	b.build.BLOCKN = &blockn
	return b
}

// Brightness sets Settings's Brightness.
func (b *SettingsBuilder) Brightness(brightness int) *SettingsBuilder {
	b.build.Brightness = &brightness
	return b
}

// CalendarBodyColor sets Settings's CalendarBodyColor.
func (b *SettingsBuilder) CalendarBodyColor(calendarBodyColor int) *SettingsBuilder {
	b.build.CalendarBodyColor = &calendarBodyColor
	return b
}

// CalendarHeaderColor sets Settings's CalendarHeaderColor.
func (b *SettingsBuilder) CalendarHeaderColor(calendarHeaderColor int) *SettingsBuilder {
	b.build.CalendarHeaderColor = &calendarHeaderColor
	return b
}

// CalendarTextColor sets Settings's CalendarTextColor.
func (b *SettingsBuilder) CalendarTextColor(calendarTextColor int) *SettingsBuilder {
	b.build.CalendarTextColor = &calendarTextColor
	return b
}

// CEL sets Settings's CEL.
func (b *SettingsBuilder) CEL(cel bool) *SettingsBuilder {
	b.build.CEL = &cel
	return b
}

// ColorCorrection sets Settings's ColorCorrection.
func (b *SettingsBuilder) ColorCorrection(colorCorrection string) *SettingsBuilder {
	b.build.ColorCorrection = &colorCorrection
	return b
}

// ColorTemperature sets Settings's ColorTemperature.
func (b *SettingsBuilder) ColorTemperature(colorTemperature string) *SettingsBuilder {
	b.build.ColorTemperature = &colorTemperature
	return b
}

// DateApp sets Settings's DateApp.
func (b *SettingsBuilder) DateApp(dateApp bool) *SettingsBuilder {
	b.build.DateApp = &dateApp
	return b
}

// DateColor sets Settings's DateColor.
func (b *SettingsBuilder) DateColor(dateColor string) *SettingsBuilder {
	b.build.DateColor = &dateColor
	return b
}

// DateFormat sets Settings's DateFormat.
func (b *SettingsBuilder) DateFormat(dateFormat string) *SettingsBuilder {
	b.build.DateFormat = &dateFormat
	return b
}

// Gamma sets Settings's Gamma.
func (b *SettingsBuilder) Gamma(gamma float64) *SettingsBuilder {
	b.build.Gamma = &gamma
	return b
}

// GlobalTextColor sets Settings's GlobalTextColor.
func (b *SettingsBuilder) GlobalTextColor(globalTextColor int) *SettingsBuilder {
	b.build.GlobalTextColor = &globalTextColor
	return b
}

// HumidityApp sets Settings's HumidityApp.
func (b *SettingsBuilder) HumidityApp(humidityApp bool) *SettingsBuilder {
	b.build.HumidityApp = &humidityApp
	return b
}

// HumidityColor sets Settings's HumidityColor.
func (b *SettingsBuilder) HumidityColor(humidityColor string) *SettingsBuilder {
	b.build.HumidityColor = &humidityColor
	return b
}

// MAT sets Settings's MAT.
func (b *SettingsBuilder) MAT(mat int) *SettingsBuilder {
	b.build.MAT = &mat
	return b
}

// MatrixPower sets Settings's MatrixPower.
func (b *SettingsBuilder) MatrixPower(matrixPower bool) *SettingsBuilder {
	b.build.MatrixPower = &matrixPower
	return b
}

// Overlay sets Settings's Overlay.
func (b *SettingsBuilder) Overlay(overlay Overlay) *SettingsBuilder {
	b.build.Overlay = &overlay
	return b
}

// ScrollSpeed sets Settings's ScrollSpeed.
func (b *SettingsBuilder) ScrollSpeed(scrollSpeed int) *SettingsBuilder {
	b.build.ScrollSpeed = &scrollSpeed
	return b
}

// SOUND sets Settings's SOUND.
func (b *SettingsBuilder) SOUND(sound bool) *SettingsBuilder {
	b.build.SOUND = &sound
	return b
}

// StartWeekOnMonday sets Settings's StartWeekOnMonday.
func (b *SettingsBuilder) StartWeekOnMonday(startWeekOnMonday bool) *SettingsBuilder {
	b.build.StartWeekOnMonday = &startWeekOnMonday
	return b
}

// TemperatureApp sets Settings's TemperatureApp.
func (b *SettingsBuilder) TemperatureApp(temperatureApp bool) *SettingsBuilder {
	b.build.TemperatureApp = &temperatureApp
	return b
}

// TemperatureColor sets Settings's TemperatureColor.
func (b *SettingsBuilder) TemperatureColor(temperatureColor string) *SettingsBuilder {
	b.build.TemperatureColor = &temperatureColor
	return b
}

// TimeApp sets Settings's TimeApp.
func (b *SettingsBuilder) TimeApp(timeApp bool) *SettingsBuilder {
	b.build.TimeApp = &timeApp
	return b
}

// TimeColor sets Settings's TimeColor.
func (b *SettingsBuilder) TimeColor(timeColor string) *SettingsBuilder {
	b.build.TimeColor = &timeColor
	return b
}

// TimeFormat sets Settings's TimeFormat.
func (b *SettingsBuilder) TimeFormat(timeFormat string) *SettingsBuilder {
	b.build.TimeFormat = &timeFormat
	return b
}

// TransitionEffect sets Settings's TransitionEffect.
func (b *SettingsBuilder) TransitionEffect(transitionEffect int) *SettingsBuilder {
	b.build.TransitionEffect = &transitionEffect
	return b
}

// TransitionSpeedMillis sets Settings's TransitionSpeedMillis.
func (b *SettingsBuilder) TransitionSpeedMillis(transitionSpeedMillis int) *SettingsBuilder {
	b.build.TransitionSpeedMillis = &transitionSpeedMillis
	return b
}

// Uppercase sets Settings's Uppercase.
func (b *SettingsBuilder) Uppercase(uppercase bool) *SettingsBuilder {
	b.build.Uppercase = &uppercase
	return b
}

// Volume sets Settings's Volume.
func (b *SettingsBuilder) Volume(volume int) *SettingsBuilder {
	b.build.Volume = &volume
	return b
}

// WeekDay sets Settings's WeekDay.
func (b *SettingsBuilder) WeekDay(weekDay bool) *SettingsBuilder {
	b.build.WeekDay = &weekDay
	return b
}

// WeekDayColorActive sets Settings's WeekDayColorActive.
func (b *SettingsBuilder) WeekDayColorActive(weekDayColorActive int) *SettingsBuilder {
	b.build.WeekDayColorActive = &weekDayColorActive
	return b
}

// WeekDayColorInactive sets Settings's WeekDayColorInactive.
func (b *SettingsBuilder) WeekDayColorInactive(weekDayColorInactive int) *SettingsBuilder {
	b.build.WeekDayColorInactive = &weekDayColorInactive
	return b
}
